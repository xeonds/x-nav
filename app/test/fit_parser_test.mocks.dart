// Mocks generated by Mockito 5.4.5 from annotations
// in app/test/fit_parser_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:typed_data' as _i3;

import 'package:fit_parser/src/data_message.dart' as _i6;
import 'package:fit_parser/src/developer.dart' as _i7;
import 'package:fit_parser/src/developer_field_definition.dart' as _i5;
import 'package:fit_parser/src/fit_file.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFitFile_0 extends _i1.SmartFake implements _i2.FitFile {
  _FakeFitFile_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [FitFile].
///
/// See the documentation for Mockito's code generation for more information.
class MockFitFile extends _i1.Mock implements _i2.FitFile {
  MockFitFile() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set path(String? _path) => super.noSuchMethod(
    Invocation.setter(#path, _path),
    returnValueForMissingStub: null,
  );

  @override
  set endianness(_i3.Endian? _endianness) => super.noSuchMethod(
    Invocation.setter(#endianness, _endianness),
    returnValueForMissingStub: null,
  );

  @override
  int get fileHeaderLength =>
      (super.noSuchMethod(Invocation.getter(#fileHeaderLength), returnValue: 0)
          as int);

  @override
  set fileHeaderLength(int? _fileHeaderLength) => super.noSuchMethod(
    Invocation.setter(#fileHeaderLength, _fileHeaderLength),
    returnValueForMissingStub: null,
  );

  @override
  set protocolVersion(int? _protocolVersion) => super.noSuchMethod(
    Invocation.setter(#protocolVersion, _protocolVersion),
    returnValueForMissingStub: null,
  );

  @override
  set profileVersion(int? _profileVersion) => super.noSuchMethod(
    Invocation.setter(#profileVersion, _profileVersion),
    returnValueForMissingStub: null,
  );

  @override
  int get dataSize =>
      (super.noSuchMethod(Invocation.getter(#dataSize), returnValue: 0) as int);

  @override
  set dataSize(int? _dataSize) => super.noSuchMethod(
    Invocation.setter(#dataSize, _dataSize),
    returnValueForMissingStub: null,
  );

  @override
  int get lineNumber =>
      (super.noSuchMethod(Invocation.getter(#lineNumber), returnValue: 0)
          as int);

  @override
  set lineNumber(int? _lineNumber) => super.noSuchMethod(
    Invocation.setter(#lineNumber, _lineNumber),
    returnValueForMissingStub: null,
  );

  @override
  set dataType(String? _dataType) => super.noSuchMethod(
    Invocation.setter(#dataType, _dataType),
    returnValueForMissingStub: null,
  );

  @override
  int get crc =>
      (super.noSuchMethod(Invocation.getter(#crc), returnValue: 0) as int);

  @override
  set crc(int? _crc) => super.noSuchMethod(
    Invocation.setter(#crc, _crc),
    returnValueForMissingStub: null,
  );

  @override
  int get debugPrintFrom =>
      (super.noSuchMethod(Invocation.getter(#debugPrintFrom), returnValue: 0)
          as int);

  @override
  set debugPrintFrom(int? _debugPrintFrom) => super.noSuchMethod(
    Invocation.setter(#debugPrintFrom, _debugPrintFrom),
    returnValueForMissingStub: null,
  );

  @override
  int get debugPrintTo =>
      (super.noSuchMethod(Invocation.getter(#debugPrintTo), returnValue: 0)
          as int);

  @override
  set debugPrintTo(int? _debugPrintTo) => super.noSuchMethod(
    Invocation.setter(#debugPrintTo, _debugPrintTo),
    returnValueForMissingStub: null,
  );

  @override
  _i3.ByteBuffer get buffer =>
      (super.noSuchMethod(
            Invocation.getter(#buffer),
            returnValue: _i4.dummyValue<_i3.ByteBuffer>(
              this,
              Invocation.getter(#buffer),
            ),
          )
          as _i3.ByteBuffer);

  @override
  set buffer(_i3.ByteBuffer? _buffer) => super.noSuchMethod(
    Invocation.setter(#buffer, _buffer),
    returnValueForMissingStub: null,
  );

  @override
  _i3.ByteData get byteData =>
      (super.noSuchMethod(
            Invocation.getter(#byteData),
            returnValue: _i3.ByteData(0),
          )
          as _i3.ByteData);

  @override
  set byteData(_i3.ByteData? _byteData) => super.noSuchMethod(
    Invocation.setter(#byteData, _byteData),
    returnValueForMissingStub: null,
  );

  @override
  int get pointer =>
      (super.noSuchMethod(Invocation.getter(#pointer), returnValue: 0) as int);

  @override
  set pointer(int? _pointer) => super.noSuchMethod(
    Invocation.setter(#pointer, _pointer),
    returnValueForMissingStub: null,
  );

  @override
  Map<dynamic, dynamic> get definitionMessages =>
      (super.noSuchMethod(
            Invocation.getter(#definitionMessages),
            returnValue: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  set definitionMessages(Map<dynamic, dynamic>? _definitionMessages) =>
      super.noSuchMethod(
        Invocation.setter(#definitionMessages, _definitionMessages),
        returnValueForMissingStub: null,
      );

  @override
  List<_i5.DeveloperFieldDefinition> get developerFieldDefinitions =>
      (super.noSuchMethod(
            Invocation.getter(#developerFieldDefinitions),
            returnValue: <_i5.DeveloperFieldDefinition>[],
          )
          as List<_i5.DeveloperFieldDefinition>);

  @override
  set developerFieldDefinitions(
    List<_i5.DeveloperFieldDefinition>? _developerFieldDefinitions,
  ) => super.noSuchMethod(
    Invocation.setter(#developerFieldDefinitions, _developerFieldDefinitions),
    returnValueForMissingStub: null,
  );

  @override
  List<_i6.DataMessage> get dataMessages =>
      (super.noSuchMethod(
            Invocation.getter(#dataMessages),
            returnValue: <_i6.DataMessage>[],
          )
          as List<_i6.DataMessage>);

  @override
  set dataMessages(List<_i6.DataMessage>? _dataMessages) => super.noSuchMethod(
    Invocation.setter(#dataMessages, _dataMessages),
    returnValueForMissingStub: null,
  );

  @override
  List<_i7.Developer> get developers =>
      (super.noSuchMethod(
            Invocation.getter(#developers),
            returnValue: <_i7.Developer>[],
          )
          as List<_i7.Developer>);

  @override
  set developers(List<_i7.Developer>? _developers) => super.noSuchMethod(
    Invocation.setter(#developers, _developers),
    returnValueForMissingStub: null,
  );

  @override
  _i2.FitFile parse() =>
      (super.noSuchMethod(
            Invocation.method(#parse, []),
            returnValue: _FakeFitFile_0(this, Invocation.method(#parse, [])),
          )
          as _i2.FitFile);
}
